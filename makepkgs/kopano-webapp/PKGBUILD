# Maintainer: MartiMcFly <martimcfly [at] autorisation.de>
# Contributor: Archist archist@die-optimisten.net

pkgname='kopano-webapp'
pkgver='4.6.3'
pkgrel=1
pkgdesc='Provides all the familiar email, advanced calendaring and contacts features you need to be productive'
groups=(
    'kopano'
	)
arch=(
    'any'
     )
url='http://www.kopano.com/'
license=('AGPL3')

_sourcebranch=$(if [[ "${pkgname}" == *-git ]]; then echo "#branch=master"; else echo "#tag=v${pkgver}"; fi)
source=(
    "${pkgname}::git+https://stash.kopano.io/scm/kw/kopano-webapp.git${_sourcebranch}"
	)
md5sums=(
    'SKIP'
	)

makedepends=(
    # WEBAPP: https://stash.kopano.io/projects/KW/repos/kopano-webapp/browse/README.md
    'apache-ant'
    'apache-ant-contrib'
    'gettext'
    'libxml2'

    # PKGBUILD
    'git'
    'gzip'
	     )
depends=(
    # WEBAPP: https://stash.kopano.io/projects/KW/repos/kopano-webapp/browse/README.md
    # https://stash.kopano.io/projects/KW/repos/kopano-webapp/browse/README.md
    # https://stash.kopano.io/projects/KW/repos/kopano-webapp/browse/server/includes/core/class.configcheck.php
    'php' # extensions: json, zip (ini), gettext (ini), zlib, iconv (ini) - 'euro-sign support', mapi (ini)
    'kopano-core'
    'libiconv'
    'gettext'
	)
optdepends=(
    'kopano-webapp-nginx'
	    )
install='install'

# https://wiki.archlinux.org/index.php/VCS_package_guidelines#Git
pkgver() {
    cd ${srcdir}/${pkgname}
    if [[ "${pkgname}" == *-git ]];
    then
        git tag -l v* --sort=v:refname | tail -n 1 | sed "s|v\(.*\)|\1.r$(git rev-list --count HEAD).$(git rev-parse --short HEAD)|"
    else
        echo ${pkgver}
    fi
}

_binDir=/usr/share/webapps/${pkgname}
_confDir=/etc/webapps/${pkgname}
_stateDir=/var/lib/webapps/${pkgname}
_logDir=/var/log/${pkgname}
_commonPermissions="u=rwx,g=rx,o=rx u=rw,g=r,o=r"
_securePermissions="u=rwx,g=rx,o= u=rw,g=r,o="

build() {
    cd ${srcdir}/${pkgname}
    make server client

    # Broken in Makefile
    # DESTDIR=""
}

package() {
    source ./install

    _install root:root ${_commonPermissions} ${srcdir}/${pkgname}/deploy \
	${pkgdir}${_binDir}
    sed -i -e 's|\(\"DEBUG_LOADER\", \).*$|\1LOAD_RELEASE);|' \
	${pkgdir}${_binDir}/debug.example.php
    _compressStatic ${pkgdir}${_binDir}

    _install http:http ${_securePermissions} ${pkgdir}${_confDir}
    ln -s ${confDir}/config.php \
	${pkgdir}${_confDir}/config.php 

    _install http:http ${_securePermissions} ${pkgdir}${_stateDir}
    _install http:http ${_securePermissions} ${pkgdir}${_stateDir}/plugins

    _install http:http ${_securePermissions} ${pkgdir}${_logDir}
    _install http:http ${_securePermissions} debug.txt \
	${pkgdir}${_logDir}
    ln -s ${_logDir}/debug.txt \
	${pkgdir}${_logDir}/debug.txt
}

# compressStatic /usr/share/webapps/xxx 'htm|css|html|js'
_compressStatic() {
    _dir=$1
    if [ -z "$2" ];
    then
        _fileExtensions='htm|css|html|js'
    fi

    find ${_dir} -type f -regextype posix-extended -regex '.*\.('${fileExtensions}')' -print0 \
        | while read -d $'\0' _staticFile
    do
        if [ -f "${_staticFile}".gz ]
        then
            FILE_ORIG=$(stat -c %Y "${_staticFile}")
            FILE_GZIP=$(stat -c %Y "${_staticFile}".gz)
            if [ $FILE_ORIG -gt $FILE_GZIP ]
            then
                rm "${_staticFile}".gz
                gzip -k -9 "${_staticFile}"
                echo "Deleted old .gz and created new one at: ${_staticFile}.gz"
            else
                echo "Skipping - Already up to date: ${_staticFile}.gz"
            fi
        else
            gzip -k -9 "${_staticFile}"
            echo "Created new: ${_staticFile}.gz"
        fi
    done
}