# https://wiki.archlinux.org/index.php/Arch_package_guidelines
#_binDir=
#_confDir=
_docDir=usr/share/doc/${pkgname}
_stateDir=var/lib/${pkgname}
_logDir=var/log/${pkgname}
_licenseDir=usr/share/licenses/${pkgname}

_commonPermissions='u=rwx,g=rx,o=rx u=rw,g=r,o=r'
_securePermissions='u=rwx,g=rx,o= u=rw,g=r,o='


# Strictly Formatted Installation
#
### Files
# Known system -parent- directories are created automaticaly. Apart from
# that only leaf directories are created. Rights are applied to the leaf
# directory only.
#
# (1) _install user:group ${_commonPermissions} newFile destDir/
#     * Create Empty File In Destination-Directory
#     => destDir/newFile
#
# (2) _install user:group ${_commonPermissions} sourceFile destDir/
#     * Copy Source-File Into Destination-Directory
#     => destDir/sourcFileName
#
# (3) _install user:group ${_commonPermissions} sourceFile destDir/destFileName
#     * Copy Source-File Into Destinatin-Directory With New Name
#     => destDir/destFileName
#
### Directories
# For clean documentation parent directories are not created automaticaly.
#
# (4) _install user:group ${_commonPermissions} destDir/newDir
#     * Create New Directory
#     => destDir/newDir
#
# (5) _install user:group ${_commonPermissions} sourceDir destDir/
#     * Copy Source-Directory Into Destination-Directory
#     => destDir/sourceDirName
#
# (6) _install user:group ${_commonPermissions} sourceDir destDir
#     * Copy Content of Source-Directory Into Destination-Directory
#     => destDir/sourceDirContent
#
# https://www.shellbefehle.de/befehle/chmod/
_install() {
    local _chown="$1"
    local _chmodDir="$2"
    local _chmodFile="$3"

    ### Directories
    # (4) Create New Directory
    if [ -z "$5" ];
    then
	local _dest="$4"
	_mkdirLeaf "${_dest}"
	chown ${_chown} ${_dest}
	chmod "${_chmodDir}" ${_dest}
	return 0
    fi

    local _source=$4
    local _dest=$5
    if [ -d "${_source}" ];
    then
	if [[ ${_dest} == */ ]];
	then
	    # (5) Copy Source-Directory Into Destination-Directory
	    _dest="${_dest}$(basename ${_source})"
#	    mkdir -p ${_dest}
	    _mkdirLeaf "${_dest}"
	fi
	
	# (5),(6) Copy Content of Source-Directory Into Destination-Directory
	cp -fRT ${_source} ${_dest}
	find ${_dest} -exec chown "${_chown}" {} \;
	find ${_dest} -type f -exec chmod "${_chmodFile}" {} \;
	find ${_dest} -type d -exec chmod "${_chmodDir}" {} \;
	return 0
    fi

    ### Files
    if [[ ${_dest} == */ ]];
    then
	# (2) Copy Source-File Into Destination-Directory
	_dest=${_dest}$(basename ${_source})
    fi

    if [ ! -f "${_source}" ];
    then
	# (1) Create Empty File In Destination-Directory
	touch ${_dest}
    else
	# (1),(3) Copy Source-File Into Destinatin-Directory With New Name
	cp -fL ${_source} ${_dest}
    fi
    chown ${_chown} ${_dest}
    chmod "${_chmodFile}" ${_dest}
}

_mkdirLeaf() {
    local _dest=$1
    local _destParent="$(dirname ${_dest})"
    if [ ! -e "${_destParent}" ];
    then
	_systemDirectories=(
	    'usr/'
	    'usr/share'
	    'usr/share/webapps'
	    'usr/share/doc'
	    'usr/lib'
	    'usr/bin'
	    'opt'
	    'etc'
	    'etc/webapps'
			   )
	for _systemDirectory in "${_systemDirectories[@]}"
	do
	    if [[ ${_destParent} == *${_systemDirectory} ]];
	    then
		mkdir -p ${_destParent}
		break
	    fi
	done

	if [ ! -e "${_destParent}" ];
	then
	    echo "Parent not found (${_destParent}). Maybe its a not known System-Directory:"
	    for _systemDirectory in "${_systemDirectories[@]}"
	    do
		echo "   ${_systemDirectory}"
	    done
	    exit 1
	fi
    fi

    if [ ! -e "${_dest}" ];
    then
        mkdir "${_dest}"
    fi
}
